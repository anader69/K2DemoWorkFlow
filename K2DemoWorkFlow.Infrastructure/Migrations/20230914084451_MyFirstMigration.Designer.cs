// <auto-generated />
using System;
using K2DemoWorkFlow.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace K2DemoWorkFlow.Infrastructure.Migrations
{
    [DbContext(typeof(WorkFlowContext))]
    [Migration("20230914084451_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("K2DemoWorkFlow.Domain.Entities.Workflow.Process", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkflowName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("K2DemoWorkFlow.Domain.Entities.Workflow.ProcessAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCommentRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCommentVisible")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcessActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessActivityId");

                    b.HasIndex("ProcessId");

                    b.ToTable("ProcessActions");
                });

            modelBuilder.Entity("K2DemoWorkFlow.Domain.Entities.Workflow.ProcessActionTracking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DelegatedFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DelegatedTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("ProcessActionId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TaskAssignDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("TaskStatusId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProcessActionId");

                    b.HasIndex("ProcessId");

                    b.HasIndex("TaskId");

                    b.HasIndex("TaskStatusId");

                    b.ToTable("ProcessActionTrackings");
                });

            modelBuilder.Entity("K2DemoWorkFlow.Domain.Entities.Workflow.ProcessActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccessRoleKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.Property<string>("TaskDecisionUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.ToTable("ProcessActivities");
                });

            modelBuilder.Entity("K2DemoWorkFlow.Domain.Entities.Workflow.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssignedTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignedToFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Originator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessInstanceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TaskDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TaskStatusId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProcessActivityId");

                    b.HasIndex("ProcessId");

                    b.HasIndex("TaskStatusId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("K2DemoWorkFlow.Domain.Entities.Workflow.TaskStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ActivityTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantStatusAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantStatusEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.Property<bool>("ShowInInbox")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInRequest")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.ToTable("TaskStatus");
                });

            modelBuilder.Entity("K2DemoWorkFlow.Domain.Entities.Workflow.ProcessAction", b =>
                {
                    b.HasOne("K2DemoWorkFlow.Domain.Entities.Workflow.ProcessActivity", "ProcessActivity")
                        .WithMany()
                        .HasForeignKey("ProcessActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("K2DemoWorkFlow.Domain.Entities.Workflow.Process", "Process")
                        .WithMany("ProcessActions")
                        .HasForeignKey("ProcessId");

                    b.Navigation("Process");

                    b.Navigation("ProcessActivity");
                });

            modelBuilder.Entity("K2DemoWorkFlow.Domain.Entities.Workflow.ProcessActionTracking", b =>
                {
                    b.HasOne("K2DemoWorkFlow.Domain.Entities.Workflow.ProcessAction", "ProcessAction")
                        .WithMany()
                        .HasForeignKey("ProcessActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("K2DemoWorkFlow.Domain.Entities.Workflow.Process", "Process")
                        .WithMany("ProcessActionTrackings")
                        .HasForeignKey("ProcessId");

                    b.HasOne("K2DemoWorkFlow.Domain.Entities.Workflow.Task", "Task")
                        .WithMany("ProcessActionTrackings")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("K2DemoWorkFlow.Domain.Entities.Workflow.TaskStatus", "TaskStatus")
                        .WithMany("ProcessActionTrackings")
                        .HasForeignKey("TaskStatusId");

                    b.Navigation("Process");

                    b.Navigation("ProcessAction");

                    b.Navigation("Task");

                    b.Navigation("TaskStatus");
                });

            modelBuilder.Entity("K2DemoWorkFlow.Domain.Entities.Workflow.ProcessActivity", b =>
                {
                    b.HasOne("K2DemoWorkFlow.Domain.Entities.Workflow.Process", "Process")
                        .WithMany("ProcessActivities")
                        .HasForeignKey("ProcessId");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("K2DemoWorkFlow.Domain.Entities.Workflow.Task", b =>
                {
                    b.HasOne("K2DemoWorkFlow.Domain.Entities.Workflow.ProcessActivity", "ProcessActivity")
                        .WithMany()
                        .HasForeignKey("ProcessActivityId");

                    b.HasOne("K2DemoWorkFlow.Domain.Entities.Workflow.Process", "Process")
                        .WithMany("Tasks")
                        .HasForeignKey("ProcessId");

                    b.HasOne("K2DemoWorkFlow.Domain.Entities.Workflow.TaskStatus", "TaskStatus")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskStatusId");

                    b.Navigation("Process");

                    b.Navigation("ProcessActivity");

                    b.Navigation("TaskStatus");
                });

            modelBuilder.Entity("K2DemoWorkFlow.Domain.Entities.Workflow.TaskStatus", b =>
                {
                    b.HasOne("K2DemoWorkFlow.Domain.Entities.Workflow.Process", "Process")
                        .WithMany("TaskStatues")
                        .HasForeignKey("ProcessId");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("K2DemoWorkFlow.Domain.Entities.Workflow.Process", b =>
                {
                    b.Navigation("ProcessActionTrackings");

                    b.Navigation("ProcessActions");

                    b.Navigation("ProcessActivities");

                    b.Navigation("TaskStatues");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("K2DemoWorkFlow.Domain.Entities.Workflow.Task", b =>
                {
                    b.Navigation("ProcessActionTrackings");
                });

            modelBuilder.Entity("K2DemoWorkFlow.Domain.Entities.Workflow.TaskStatus", b =>
                {
                    b.Navigation("ProcessActionTrackings");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
